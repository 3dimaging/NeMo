# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2020, NVIDIA
# This file is distributed under the same license as the nemo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nemo 0.10.0b10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-02 10:41-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../nlp/dialogue_state_tracking_trade.rst:2
msgid "Tutorial"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:6
msgid "Introduction"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:8
msgid ""
"The goal of **Dialog State Tracking (DST)** :cite:`nlp-dst-"
"henderson2015machine` \\ is to build a representation of the status of "
"the ongoing conversation \\ being a sequence of utterances exchanged "
"between dialog participants. \\ In another words, the goal of DST system "
"is to capture user goals and intentions and encode them as a set of \\ "
"**slots** along with the corresponding **values**. DST is considered an "
"important module for most of the goal-oriented dialogue systems."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:17
msgid ""
"Fig. 1: An exemplary, multi-domain dialog along with the associated state"
" tracking (source: \\ :cite:`nlp-dst-wu2019transferable`)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:21
msgid ""
"In this tutorial we will focus on a multi-domain dialogue MultiWOZ "
"dataset :cite:`nlp-dst-budzianowski2018multiwoz` \\ and show how one can "
"train a TRADE model :cite:`nlp-dst-wu2019transferable`, \\ being one of "
"the recent, state of the art models. \\ **Multi-domain** setting "
"introduces several challanges, with the most important coming from the "
"need for \\ **multi-turn mapping**. In a **single-turn mapping** scenario"
" the (**domain**, **slot**, **value**) triplet can be \\ inferred from a "
"single turn. In multi-turn this assumption does not hold and the DST "
"system must infer those from \\ multiple turns, possibly spanning over "
"several different domains."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:33
msgid "The MultiWOZ Dataset"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:35
msgid ""
"The Multi-Domain Wizard-of-Oz dataset (`MultiWOZ`_) is a collection of "
"human-to-human conversations spanning over \\ 7 distinct domains and "
"containing over 10,000 dialogues. The original MultiWOZ 2.0 dataset was "
"introduced in :cite:`nlp-dst-budzianowski2018multiwoz`. However, in this "
"tutorial we will utilize MultiWOZ 2.1  :cite:`nlp-dst-eric2019multiwoz`, "
"which is an updated version of MultiWOZ 2.0. They have fixed several "
"issues with the original dataset including errors in states, utterances, "
"value canonicalization etc.). Our model can also get trained on MultiWOZ "
"2.0."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:49
msgid "The MultiWOZ dataset covers the following domains:"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:43
msgid "restaurant"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:44
msgid "hotel"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:45
msgid "attraction"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:46
msgid "taxi"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:47
msgid "train"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:48
msgid "hospital"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:49
msgid "police"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:77
msgid "As well as the following slots:"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:52
msgid "inform (∗)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:53
msgid "address (∗)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:54
msgid "postcode (∗)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:55
msgid "phone (∗)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:56
msgid "name (1234)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:57
msgid "no of choices (1235)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:58
msgid "area (123)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:59
msgid "pricerange (123)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:60
msgid "type (123)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:61
msgid "internet (2)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:62
msgid "parking (2)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:63
msgid "stars (2)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:64
msgid "open hours (3)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:65
msgid "departure (45)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:66
msgid "destination (45)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:67
msgid "leave after (45)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:68
msgid "arrive by (45)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:69
msgid "no of people (1235)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:70
msgid "reference no. (1235)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:71
msgid "trainID (5)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:72
msgid "ticket price (5)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:73
msgid "travel time (5)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:74
msgid "department (7)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:75
msgid "day (1235)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:76
msgid "no of days (123)."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:79
msgid ""
"Please note that some of the actions and slots are associated with "
"particular domain(s), whereas some are universal, \\ i.e. domain "
"independent. The latter ones are denoted with (∗)."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:83
#, python-format
msgid ""
"MultiWOZ offers 10,438 dialogues, with 115,434 turns in total. \\ "
"Dialogues are generally classified into single and multi-domain "
"dialogues. \\ Dialogue length distribution is varying from 1 to 31, with "
"around 70% of dialogues have more than 10 turns. \\ The average number of"
" turns are 8.93 and 15.39 for single and multi-domain dialogues. \\"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:88
msgid ""
"Each dialogue consists of a goal, multiple user and system utterances as "
"well as a belief state and set of dialogue \\ acts with slots per turn. "
"Additionally, each dialog is supported with a task description. \\ "
"Moreover, it contains both system and user dialogue act annotations (the "
"latter introduced in MultiWOZ 2.1)."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:94
msgid "TRADE Model"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:96
msgid ""
"The **TRA**\\nsferable **D**\\ialogue stat\\ **E** generator (TRADE) "
":cite:`nlp-dst-wu2019transferable`  is a model \\ designed specially for "
"the multi-domain \\ task-oriented dialogue state tracking problem. \\ The"
" model generates dialogue states from utterances and history. It learns "
"embeddings for domains and slots, and also \\ benefits from copy "
"mechanism to facilitate knowledge transfer between domains. It enables "
"the model to predict \\(**domain**, **slot**, **value**) triplets not "
"encountered during training in a given domain."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:106
msgid ""
"Fig. 2: Architecture of the TRADE model (source: :cite:`nlp-dst-"
"wu2019transferable`)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:108
msgid "The model is composed of three main components:"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:110
msgid "**Utterance Encoder**,"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:111
msgid "**Slot Gate**, and"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:112
msgid "**State Generator**."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:114
msgid ""
"The **utterance encoder** is a bi-directional Gated Recurrent Unit (GRU),"
" returning both \\ context words and and an aggregated context vector "
"encoding the whole dialogue history."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:117
msgid ""
"The **state generator** also uses GRU to predict the value for "
"each(domain, slot) pair. Generator employ a soft-gated \\ pointer-"
"generator copying to combine a **distribution over the vocabulary** and a"
" **distribution over the dialogue \\ history** into a single output "
"distribution."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:121
msgid ""
"Finally, the **slot gate** is a simple classifier that maps a context  "
"vector taken from the encoder hidden states \\ to a probability  "
"distribution  over three classes: *ptr*, *none*,  and *dontcare*."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:125
msgid "Data Pre-processing"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:127
msgid ""
"First, you need to download `MULTIWOZ2.1.zip` from the `MultiWOZ2.1`_ "
"project website. It contains the data for \\ MultiWOZ 2.1 dataset. "
"Alternatively, you can download `MULTIWOZ2.zip` compressed file from "
"`MultiWOZ2.0`_ which \\ contain the older version of this dataset."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:135
msgid ""
"Next, we need to preprocess and reformat the dataset, what will result in"
" division of data into three splits:"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:137
msgid "traininig split (8242 dialogs in the ``train_dials.json`` file)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:138
msgid "development/validation split (1000 dialogs in the ``dev_dials.json`` file)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:139
msgid "test split (999 dialogs in the ``test_dials.json`` file)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:141
msgid ""
"In order to preprocess the MultiWOZ dataset you can use the provided "
"`process_multiwoz.py`_ script:"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:153
msgid ""
"Argument `--source_data_dir` specifies the folder where you have copied "
"and extracted data into. \\ It will store the processed dataset in the "
"folder given by `--target_data_dir`. \\ Both MultiWOZ 2.0 and MultiWOZ "
"2.1 datasets can get processed with the same script."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:159
msgid "Building the NeMo Graph"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:161
msgid ""
"The NeMo training graph consists of the following six modules including "
"data layer, encoder, decoder, and losses:"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:163
msgid "data_layer (:class:`nemo.collection.nlp.nm.data_layers.MultiWOZDataLayer`)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:164
msgid "encoder (:class:`nemo.backends.pytorch.common.EncoderRNN`)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:165
msgid "decoder (:class:`nemo.collection.nlp.nm.trainables.TRADEGenerator`)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:166
msgid ""
"gate_loss_fn "
"(:class:`nemo.backends.pytorch.common.losses.CrossEntropyLossNM`)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:167
msgid "ptr_loss_fn (:class:`nemo.collections.nlp.nm.losses.MaskedLogLoss`)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:168
msgid "total_loss_fn (:class:`nemo.collection.nlp.nm.losses.LossAggregatorNM`)"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:171
msgid "Training"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:173
msgid ""
"In order to train an instance of the TRADE model on the MultiWOZ dataset "
"and evaluate on its test data simply run \\ the "
"`dialogue_state_tracking_trade.py`_ script with default parameters:"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:187
msgid ""
"You may find the list of parameters in the example file and update them "
"as see fits. \\ By default the script would train the model for 10 epochs"
" on 1 single gpu. \\ The police and hospital domains are excluded from "
"the training by default as they do not exist in the development set. \\ "
"The list of the domains can get updated in the example."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:194
msgid "Evaluating Checkpoints"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:196
msgid ""
"By default a folder named \"checkpoints\" would get created under the "
"working folder specified by `--work_dir` and \\ checkpoints are stored "
"under it. To do evaluation a checkpoint on test or dev set, \\ you may "
"run the same script by passing `--checkpoint_dir` and setting "
"`--num_epochs` as zero to avoid the training:"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:211
msgid "Metrics and Results"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:213
msgid ""
"In the following table we compare the results achieved by our TRADE model"
" implementation with the results reported \\ in the original paper :cite"
":`nlp-dst-wu2019transferable`. We trained our models for 10 epochs on a "
"single GPU with 16GB memory. \\ As the authors reported results on just "
"MultiWOZ 2.0 dataset, we ran the original implementation on MultiWOZ 2.1 "
"dataset \\ and reported those too."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:218
msgid ""
"We used the same parameters as the original implementation. There are "
"some differences between our implementation and \\ the original one. The "
"main difference is that our model does not use pre-trained embeddings "
"which seems not to affect \\ the performance of the model. The other "
"difference is that we used SquareAnnealing for the learning policy "
"instead of \\ fixed learning rate. Additionally, we create the vocabulary"
" just based on the training data while the default for the \\ original "
"one is to create vocabulary from all the data including test and "
"development sets. The main reason behind \\ the improvement of our model "
"in terms of accuracy is utilizing better learning rate policy. When we "
"used fixed \\ learning rate in our implementation, we got similar results"
" as the original one."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:226
msgid ""
"We also did some improvements to the implementation of the model to have "
"faster training. It makes our implementation \\ significantly faster than"
" the original one. Additionally, NeMo supports multi-GPU training which "
"enables even faster \\ training time. It should be noted that learning "
"rate needs to get \\ increased if you want to use multi-GPU training "
"because of having larger batch size."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:231
msgid ""
"Following :cite:`nlp-dst-wu2019transferable`, we used two main metrics to"
" evaluate the model performance:"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:233
msgid ""
"**Joint Goal Accuracy** compares the predicted dialogue states to the "
"ground truth at each dialogue turn, and the output is considered correct "
"if and only if **all the predicted values exactly match** the ground "
"truth values."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:235
msgid ""
"**Slot Accuracy** independently compares each (domain, slot, value) "
"triplet to its ground truth label."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:243
msgid "TRADE implementations"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:239
msgid "MultiWOZ 2.0"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:239
msgid "MultiWOZ 2.1"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:241
msgid "Test"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:241
msgid "Development"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:243
msgid "Goal"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:243
msgid "Slot"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:245
msgid "Original :cite:`nlp-dst-wu2019transferable`"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:245
msgid "48.62%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:245
msgid "96.92%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:245
msgid "48.76%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:245
msgid "96.95%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:245
msgid "45.31%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:245
msgid "96.57%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:245
msgid "49.15%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:245
msgid "97.04%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:247
msgid "NeMo's Implementation of TRADE"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:247
msgid "49.78%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:247
msgid "97.06%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:247
msgid "50.44%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:247
msgid "97.15%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:247
msgid "47.77%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:247
msgid "96.82%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:247
msgid "50.85%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:247
msgid "97.21%"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:250
msgid ""
"You may find the checkpoints for the trained models on MultiWOZ 2.0 and "
"MultiWOZ 2.1 datasets on NGC:"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:252
msgid ""
"**MultiWOZ 2.0**: "
"https://ngc.nvidia.com/catalog/models/nvidia:trade___dialogue_state_tracker___multiwoz_2_0"
" **MultiWOZ 2.1**: "
"https://ngc.nvidia.com/catalog/models/nvidia:trade___dialogue_state_tracker___multiwoz_2_1"
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:256
msgid ""
"During training, TRADE model uses an additional supervisory signal, "
"enforcing the Slot Gate to properly \\ predict special values for like "
"**don't care** or **none** for the slots. \\ The `process_multiwoz.py`_ "
"script extracts that additional information from the dataset and the "
"`dialogue_state_tracking_trade.py`_ script reports the **Gating "
"Accuracy** as well."
msgstr ""

#: ../../nlp/dialogue_state_tracking_trade.rst:262
msgid "References"
msgstr ""

