# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2020, NVIDIA
# This file is distributed under the same license as the nemo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nemo 0.10.0b10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-02 10:41-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../tts/fastspeech.rst:4
msgid "Fast Speech"
msgstr ""

#: ../../tts/fastspeech.rst:7
msgid "Model"
msgstr ""

#: ../../tts/fastspeech.rst:8
msgid ""
"This model is based on the `Fast Speech model <https://www.microsoft.com"
"/en-us/research/blog/fastspeech-new-text-to-speech-model-improves-on-"
"speed-accuracy-and-controllability>`_ (see also `paper "
"<https://arxiv.org/abs/1905.09263>`_)."
msgstr ""

#: ../../tts/fastspeech.rst:12
msgid ""
"Fast Speech operates within two distinct stages: durations extraction and"
" actual training."
msgstr ""

#: ../../tts/fastspeech.rst:15
msgid "Durations Extraction"
msgstr ""

#: ../../tts/fastspeech.rst:17
msgid ""
"First, for each input dataset char, you should obtain duration integer, "
"which corresponds to the number of steps this char lasts in audio sample."
" For that, NeMo uses alignment map from Tacotron 2 inference teacher "
"forced with ground truth mel spectrogram for shape matching. For each "
"timestep, we add +1 duration to char with strongest alignment signal in "
"alignment map."
msgstr ""

#: ../../tts/fastspeech.rst:22
msgid ""
"To do that, run fastspeech_durations.py from NeMo/examples/tts with "
"following arguments (provide path to durations dir to save):"
msgstr ""

#: ../../tts/fastspeech.rst:30
msgid "Fast Speech Training"
msgstr ""

#: ../../tts/fastspeech.rst:32
msgid ""
"Second stage is actual model training. NeMo wrap all fast speech mel "
"generation and durations calculation logic in one neural model with "
"corresponded name. FastSpeechLoss, then uses its output to calculate two "
"term loss value."
msgstr ""

#: ../../tts/fastspeech.rst:35
msgid ""
"To begin training with librispeech data durations obtained from previous "
"step, run this:"
msgstr ""

